#!/usr/bin/env python3
"""
MFCC Compressor —Å –∞–≤—Ç–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ–º —Ä–µ–∂–∏–º–∞ –∏ –º–Ω–æ–≥–æ–ø–æ—Ç–æ—á–Ω–æ—Å—Ç—å—é
"""

import os
import sys
import argparse
from MFCC import MFCC

def compress_file(input_path, output_path=None):
    """–£–º–Ω–æ–µ —Å–∂–∞—Ç–∏–µ —Å –∞–≤—Ç–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ–º —Ä–µ–∂–∏–º–∞"""
    if not os.path.exists(input_path):
        print(f"‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {input_path}")
        return False
    
    if output_path is None:
        output_path = input_path + '.mfcc'
    
    file_size = os.path.getsize(input_path)
    print(f"üéØ –°–∂–∞—Ç–∏–µ —Ñ–∞–π–ª–∞: {input_path}")
    print(f"üìä –†–∞–∑–º–µ—Ä: {file_size/(1024*1024):.1f} MB")
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–µ–∂–∏–º
    return MFCC.encode_file_auto(input_path, output_path)

def main():
    parser = argparse.ArgumentParser(description='MFCC Compressor —Å –º–Ω–æ–≥–æ–ø–æ—Ç–æ—á–Ω–æ—Å—Ç—å—é')
    parser.add_argument('input', help='–ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –¥–ª—è —Å–∂–∞—Ç–∏—è')
    parser.add_argument('-o', '--output', help='–ü—É—Ç—å –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–∂–∞—Ç–æ–≥–æ —Ñ–∞–π–ª–∞')
    parser.add_argument('-t', '--threads', type=int, default=4, 
                       help='–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Ç–æ–∫–æ–≤ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 4)')
    
    args = parser.parse_args()
    
    print("üéâ === MFCC Compressor ===")
    print("üöÄ –£–º–Ω–æ–µ —Å–∂–∞—Ç–∏–µ —Å –º–Ω–æ–≥–æ–ø–æ—Ç–æ—á–Ω–æ—Å—Ç—å—é")
    print("üé• –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ MP4")
    print("=" * 50)
    
    compress_file(args.input, args.output)

if __name__ == "__main__":
    main()
